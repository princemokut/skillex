name: Deploy to Firebase

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  API_SERVICE_NAME: skillex-api
  REGION: us-central1

jobs:
  # Deploy API to Cloud Run
  deploy-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Authenticate to Google Cloud
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/service-account.json
          gcloud auth activate-service-account --key-file=/tmp/service-account.json
          gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Create Artifact Registry repository
        run: |
          gcloud artifacts repositories create skillex \
            --repository-format=docker \
            --location=$REGION \
            --description="Skillex API Docker repository" || true

      - name: Build and push Docker image
        run: |
          docker build -f apps/api/Dockerfile -t $REGION-docker.pkg.dev/$PROJECT_ID/skillex/$API_SERVICE_NAME:$GITHUB_SHA .
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/skillex/$API_SERVICE_NAME:$GITHUB_SHA

      - name: Create environment variables file
        run: |
          cat > /tmp/env-vars.yaml << EOF
          env:
          - name: NODE_ENV
            value: production
          - name: DATABASE_URL
            value: "${{ secrets.DATABASE_URL }}"
          - name: SUPABASE_JWKS_URL
            value: "${{ secrets.SUPABASE_JWKS_URL }}"
          - name: ALLOWED_ORIGINS
            value: "${{ secrets.ALLOWED_ORIGINS }}"
          - name: RESEND_API_KEY
            value: "${{ secrets.RESEND_API_KEY }}"
          EOF

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $API_SERVICE_NAME \
            --image $REGION-docker.pkg.dev/$PROJECT_ID/skillex/$API_SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 3001 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 2 \
            --env-vars-file /tmp/env-vars.yaml
            

  # Deploy Web App to Firebase Hosting
  deploy-web:
    runs-on: ubuntu-latest
    needs: deploy-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          cd apps/web
          pnpm install --frozen-lockfile

      - name: Build Next.js app
        run: |
          cd apps/web
          pnpm build
        env:
          NEXT_PUBLIC_API_BASE: https://${{ env.API_SERVICE_NAME }}-${{ env.PROJECT_ID }}.a.run.app
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_PLAUSIBLE_DOMAIN: ${{ secrets.NEXT_PUBLIC_PLAUSIBLE_DOMAIN }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          target: apps/web
